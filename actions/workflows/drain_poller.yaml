---
version: '1.0'
description: A workflow to drain nodes from one Orion poller to another.
input:
  - src_poller
  - dst_poller
  - status
  - whitelist
  - force
tasks:
  list_nodes:
    action: orion.list_nodes_by_poller
    input:
      status: <% ctx().status %>
      poller: <% ctx().src_poller %>
      whitelist: <% ctx().whitelist %>
    next:
      - when: <% succeeded() %>
        publish:
          - orig_nodes: <% result().result.nodes %>
        do:
          - unmanage_nodes
  unmanage_nodes:
    with:
      items: node in <% ctx().orig_nodes %>
      concurrency: 10
    action: orion.node_unmanage
    input:
      node: <% item(node) %>
      minutes: 3
    next:
      - when: <% succeeded() %>
        do:
          - drain_nodes
  drain_nodes:
    with:
      items: node in <% ctx().orig_nodes %>
      concurrency: 10
    action: orion.update_node_poller
    input:
      node: <% item(node) %>
      poller: <% ctx().dst_poller %>
    next:
      - when: <% succeeded() %>
        do:
          - remanage_nodes
  remanage_nodes:
    with:
      items: node in <% ctx().orig_nodes %>
      concurrency: 10
    action: orion.node_remanage
    input:
      node: <% item(node) %>
    next:
      - when: <% succeeded() %>
        do:
          - check_nodes_status
  check_nodes_status:
    action: orion.list_nodes_by_status
    retry:
      count: 30
      delay: 15
      when: <% succeeded() and (len(result().result.nodes_unknown) = 0) %>
    input:
      whitelist: <% ctx().orig_nodes %>
      fail_on_unknowns: true
    next:
      - when: <% succeeded() and (ctx().force = false) %>
        publish:
          - nodes_down: <% result().result.nodes_down %>
          - nodes_up: <% result().result.nodes_up %>
          - nodes_unknown: <% result().result.nodes_unknown %>
        do:
          - move_downs_back
      - when: <% succeeded() and (ctx().force = true) %>
        publish:
          - nodes_down: <% result().result.nodes_down %>
          - nodes_up: <% result().result.nodes_up %>
          - nodes_unknown: <% result().result.nodes_unknown %>
        do:
          - left_nodes
  move_downs_back:
    with:
      items: node in <% ctx().nodes_down %>
      concurrency: 10
    action: orion.update_node_poller
    input:
      node: <% item(node) %>
      poller: <% ctx().src_poller %>
    next:
      - when: <% succeeded() %>
        do:
          - left_nodes
  left_nodes:
    action: orion.list_nodes_by_poller
    input:
      status: <% ctx().status %>
      poller: <% ctx().src_poller %>
      whitelist: <% ctx().whitelist %>
